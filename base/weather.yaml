apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: house-api-weather-ingress
  labels:
    component: house-api-weather
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: public
  rules:
  - host: api.home.seifts.us
    http:
      paths:
      - path: /weather(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: house-api-weather-service
            port:
              number: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: house-api-weather-service
  labels:
    component: house-api-weather
spec:
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  selector:
    component: house-api-weather
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: weather-forecast-cache-internal-service
  labels:
    component: house-api-weather
spec:
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
  selector:
    component: house-api-weather
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: house-api-weather-deployment
  labels:
    component: house-api-weather
spec:
  selector:
    matchLabels:
      component: house-api-weather
  replicas: 1
  template:
    metadata:
      labels:
        component: house-api-weather
    spec:
      imagePullSecrets:
        - name: ghcr-argocd-login
      containers:
        - name: house-api-weather-image
          image: localhost:32000/house_api_weather:1.1
          ports:
            - containerPort: 5000
      initContainers:
        - name: house-api-weather-cache-warmer
          image: ghcr.io/zachseifts/house-weather-noaa-api:latest
          env:
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: "house-api-weather-config"
                  key: redis-url
            - name: LAT
              valueFrom:
                configMapKeyRef:
                  name: "house-api-weather-config"
                  key: lat
            - name: LON
              valueFrom:
                configMapKeyRef:
                  name: "house-api-weather-config"
                  key: lon
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: house-api-weather-cache
  labels:
    component: house-api-weather
spec:
  selector:
    matchLabels:
      component: house-api-weather
  replicas: 1
  template:
    metadata:
      labels:
        component: house-api-weather
    spec:
      containers:
        - name: redis
          image: redis:alpine
          command:
            - redis-server
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /redis-data
              name: house-api-weather-cache-data
      volumes:
        - name: house-api-weather-cache-data
          emptyDir: {}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: house-api-weather-cache-job
  labels:
    component: house-api-weather
spec:
  schedule: '@hourly'
# schedule: '* * * * *'
  successfulJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        spec:
          imagePullSecrets:
            - name: ghcr-argocd-login
          containers:
            - name: house-weather-noaa-api
              image: ghcr.io/zachseifts/house-weather-noaa-api:latest
              env:
                - name: REDIS_URL
                  valueFrom:
                    configMapKeyRef:
                      name: "house-api-weather-config"
                      key: redis-url
                - name: LAT
                  valueFrom:
                    configMapKeyRef:
                      name: "house-api-weather-config"
                      key: lat
                - name: LON
                  valueFrom:
                    configMapKeyRef:
                      name: "house-api-weather-config"
                      key: lon
          restartPolicy: OnFailure
